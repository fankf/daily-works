<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fankf.dao.CommodityDao">

    <resultMap type="com.fankf.entity.Commodity" id="CommodityMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="classifyName" column="classify_name" jdbcType="VARCHAR"/>
        <result property="commodityName" column="commodity_name" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="CommodityMap">
        select
        id, classify_name, commodity_name, create_time, update_time
        from test2.commodity
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="CommodityMap">
        select
        id, classify_name, commodity_name, create_time, update_time
        from test2.commodity
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="CommodityMap">
        select
        id, classify_name, commodity_name, create_time, update_time
        from test2.commodity
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="classifyName != null and classifyName != ''">
                and classify_name = #{classifyName}
            </if>
            <if test="commodityName != null and commodityName != ''">
                and commodity_name = #{commodityName}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into test2.commodity(classify_name, commodity_name, create_time, update_time)
        values (#{classifyName}, #{commodityName}, #{createTime}, #{updateTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into test2.commodity(classify_name, commodity_name, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.classifyName}, #{entity.commodityName}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into test2.commodity(classify_name, commodity_name, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.classifyName}, #{entity.commodityName}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
        on duplicate key update
        classify_name = values(classify_name) , commodity_name = values(commodity_name) , create_time =
        values(create_time) , update_time = values(update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update test2.commodity
        <set>
            <if test="classifyName != null and classifyName != ''">
                classify_name = #{classifyName},
            </if>
            <if test="commodityName != null and commodityName != ''">
                commodity_name = #{commodityName},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from test2.commodity where id = #{id}
    </delete>

</mapper>